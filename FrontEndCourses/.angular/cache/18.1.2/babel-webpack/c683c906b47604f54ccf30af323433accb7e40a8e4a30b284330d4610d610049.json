{"ast":null,"code":"import { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../service/course.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nexport let CourseUpdateComponent = /*#__PURE__*/(() => {\n  class CourseUpdateComponent {\n    constructor(fb, courseService, route, router, snackBar) {\n      this.fb = fb;\n      this.courseService = courseService;\n      this.route = route;\n      this.router = router;\n      this.snackBar = snackBar;\n      this.selectedImage = null;\n      this.courseForm = this.fb.group({\n        courseName: ['', [Validators.required]],\n        price: ['', [Validators.required, Validators.min(0)]]\n      });\n      this.idCourse = 0; // Default value\n    }\n    ngOnInit() {\n      // Get the course ID from the route\n      this.idCourse = Number(this.route.snapshot.paramMap.get('id'));\n      if (this.idCourse) {\n        this.loadCourseDetails();\n      } else {\n        console.error('Invalid course ID');\n      }\n    }\n    loadCourseDetails() {\n      this.courseService.getCourse(this.idCourse).subscribe(course => {\n        this.courseForm.patchValue({\n          courseName: course.courseName,\n          price: course.price\n        });\n      }, error => {\n        console.error('Failed to load course details', error);\n      });\n    }\n    onFileSelected(event) {\n      this.selectedImage = event.target.files[0];\n    }\n    updateCourse() {\n      if (this.courseForm.invalid) {\n        return;\n      }\n      const formData = new FormData();\n      formData.append('courseName', this.courseForm.value.courseName);\n      formData.append('price', this.courseForm.value.price);\n      if (this.selectedImage) {\n        formData.append('image', this.selectedImage);\n      }\n      this.courseService.updateCourse(this.idCourse, formData).subscribe(updatedCourse => {\n        this.snackBar.open('Course updated successfully!', 'Close', {\n          duration: 3000\n        });\n        this.router.navigate(['/courses']);\n      }, error => {\n        console.error('Failed to update course', error);\n        this.snackBar.open('Failed to update course. Please try again.', 'Close', {\n          duration: 3000\n        });\n      });\n    }\n    static #_ = this.ɵfac = function CourseUpdateComponent_Factory(t) {\n      return new (t || CourseUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CourseService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseUpdateComponent,\n      selectors: [[\"app-course-update\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 18,\n      vars: 2,\n      consts: [[1, \"course-edit-container\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"for\", \"courseName\"], [\"id\", \"courseName\", \"formControlName\", \"courseName\", \"type\", \"text\", \"placeholder\", \"Enter course name\", 1, \"form-control\"], [\"for\", \"price\"], [\"id\", \"price\", \"formControlName\", \"price\", \"type\", \"number\", \"placeholder\", \"Enter price\", 1, \"form-control\"], [\"for\", \"image\"], [\"id\", \"image\", \"type\", \"file\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n      template: function CourseUpdateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Edit Course\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function CourseUpdateComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.updateCourse();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Course Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Price\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Course Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 8);\n          i0.ɵɵlistener(\"change\", function CourseUpdateComponent_Template_input_change_15_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 9);\n          i0.ɵɵtext(17, \" Update Course \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.courseForm);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"disabled\", ctx.courseForm.invalid);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".course-edit-container[_ngcontent-%COMP%]{max-width:500px;margin:50px auto;padding:20px;border:1px solid #ddd;border-radius:8px;box-shadow:0 4px 8px #0000001a;background-color:#fff}.course-edit-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin-bottom:20px;font-size:24px;color:#333}.form-group[_ngcontent-%COMP%]{margin-bottom:15px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:5px;font-weight:700;color:#555}.form-control[_ngcontent-%COMP%]{width:100%;padding:10px;font-size:16px;border:1px solid #ccc;border-radius:4px;box-sizing:border-box}.form-control[_ngcontent-%COMP%]:focus{border-color:#007bff;box-shadow:0 0 5px #007bff80;outline:none}#image[_ngcontent-%COMP%]{display:block;margin-top:5px}.btn-primary[_ngcontent-%COMP%]{display:block;width:100%;padding:10px;font-size:16px;color:#fff;background-color:#007bff;border:none;border-radius:4px;cursor:pointer}.btn-primary[_ngcontent-%COMP%]:disabled{background-color:#ccc;cursor:not-allowed}.btn-primary[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#0056b3}\"]\n    });\n  }\n  return CourseUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}